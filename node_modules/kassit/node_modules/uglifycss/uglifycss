#! /usr/bin/env node

/*
 * UglifyCSS
 * Port of YUI CSS Compressor from Java to NodeJS
 * Author: Franck Marcia - https://github.com/fmarcia
 *
 * Based on parts of:
 * YUI Compressor
 * Author: Julien Lecomte - http://www.julienlecomte.net/
 * Author: Isaac Schlueter - http://foohack.com/
 * Author: Stoyan Stefanov - http://phpied.com/
 * Copyright (c) 2009 Yahoo! Inc. All rights reserved.
 * The copyrights embodied in the content of this file are licensed
 * by Yahoo! Inc. under the BSD (revised) open source license.
 */


var	sys = require('sys'),
	uglifycss = require('uglifycss'),
	uglies = [],
	filename,
	content,
	params,
	nFiles,
	result;

// Print usage

function usage() {
	sys.error(
		'Usage: uglifycss [options] file1.css [file2.css [...]] > output\n' +
		'options:\n' +
		'--max-line-len x : add a newline every x characters; 0 means no newline; default: 5000\n' +
		'--expand-vars : expand variables\n' +
		'--cute-comments : add a newline around preserved comments'
	);
}

// Transform strings like "the-parameter" to "theParameter"

function par2var(param) {
	return param.replace(/-(.)/g, function (unused, character) {
		return character === '-' ? '' : character.toUpperCase();
	});
}


// Parse parameters from command line

function parseArguments(argv) {

	var	index,
		len = argv.length,
		param,
		params = {
			options: uglifycss.defaultOptions,
			files: []
		};

	for (index = 2; index < len; index += 1) {

		// last argument is always a file
		if (index === len - 1) {
			params.files.push(argv[index]);

		} else {
			varia = par2var(argv[index]);

			// boolean parameters
			if (typeof params.options[varia] === 'boolean') {
				params.options[varia] = true;

			// integer parameter
			} else if (typeof params.options[varia] !== 'undefined') {
				params.options[varia] = parseInt(argv[index + 1], 10);
				index += 1;

			// file
			} else {
				params.files.push(argv[index]);
			}
		}
	}

	return params;
}


// Uglify CSS

params = parseArguments(process.argv);
nFiles = params.files.length;

// . files
if (nFiles) {
	sys.print(uglifycss.processFiles(params.files, params.options));

// . usage
} else {
	usage();
}

/*
// . stdin
} else {
	stdin = process.openStdin();
	stdin.setEncoding("utf8");
	content = '';
	stdin.on('data', function(part) {
		content += part;
	});
	stdin.on('end', function() {
		sys.print(uglifycss.processString(content, params.options));
	});
}
*/
